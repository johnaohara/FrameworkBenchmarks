#
#Thu Oct 22 23:38:28 BST 2020
io.quarkus.runtime.logging.LogConfig.file=File logging.\n<p>\nLogging to a file is also supported but not enabled by default.
io.quarkus.runtime.shutdown.ShutdownConfig.timeout=The timeout to wait for running requests to finish. If this is not set then the application will exit immediately.\n\nSetting this timeout will incur a small performance penalty, as it requires active requests to be tracked.
io.quarkus.runtime.logging.FileConfig.RotationConfig.fileSuffix=File handler rotation file suffix.\n\nExample fileSuffix\: .yyyy-MM-dd
io.quarkus.runtime.logging.FileConfig.level=The level of logs to be written into the file.
io.quarkus.runtime.logging.AsyncConfig.enable=Indicates whether to log asynchronously
io.quarkus.runtime.logging.SyslogConfig.hostname=The name of the host the messages are being sent from
io.quarkus.runtime.logging.LogConfig.level=The log level of the root category, which is used as the default log level for all categories.\n\nJBoss Logging supports Apache style log levels\:\n\n* {@link org.jboss.logmanager.Level\#FATAL}\n* {@link org.jboss.logmanager.Level\#ERROR}\n* {@link org.jboss.logmanager.Level\#WARN}\n* {@link org.jboss.logmanager.Level\#INFO}\n* {@link org.jboss.logmanager.Level\#DEBUG}\n* {@link org.jboss.logmanager.Level\#TRACE}\n\nIn addition, it also supports the standard JDK log levels.\n\n@asciidoclet
io.quarkus.runtime.logging.ConsoleConfig.level=The console log level.
io.quarkus.runtime.logging.AsyncConfig.overflow=Determine whether to block the publisher (rather than drop the message) when the queue is full
io.quarkus.runtime.LocalesBuildTimeConfig.defaultLocale=Default locale that can be consumed by the extensions.\n<p>\nThe locales must be specified in the IETF BCP 47 format e.g. en-US or fr-FR.\n<p>\nFor instance, the Hibernate Validator extension makes use of it.
io.quarkus.runtime.logging.SyslogConfig.syslogType=Set the {@link SyslogType syslog type} this handler should use to format the message sent
io.quarkus.runtime.logging.SyslogConfig.useCountingFraming=Set to {@code true} if the message being sent should be prefixed with the size of the message
io.quarkus.runtime.logging.SyslogConfig.protocol=Sets the protocol used to connect to the syslog server
io.quarkus.runtime.logging.FileConfig.RotationConfig.maxFileSize=The maximum file size of the log file after which a rotation is executed.
io.quarkus.runtime.logging.CategoryConfig.useParentHandlers=Specify whether or not this logger should send its output to its parent Logger
io.quarkus.runtime.logging.SyslogConfig.appName=The app name used when formatting the message in RFC5424 format
io.quarkus.runtime.logging.CategoryConfig.level=The log level level for this category
io.quarkus.runtime.logging.LogConfig.fileHandlers=File handlers.\n<p>\nThe named file handlers configured here can be linked on one or more categories.
io.quarkus.runtime.logging.FileConfig.enable=If file logging should be enabled
io.quarkus.runtime.ThreadPoolConfig.shutdownCheckInterval=The frequency at which the status of the thread pool should be checked during shutdown. Information about\nwaiting tasks and threads will be checked and possibly logged at this interval. Setting this key to an empty\nvalue disables the shutdown check interval.
io.quarkus.runtime.logging.ConsoleConfig.enable=If console logging should be enabled
io.quarkus.runtime.logging.SyslogConfig.enable=If syslog logging should be enabled
io.quarkus.runtime.ThreadPoolConfig.growthResistance=The executor growth resistance.\n\nA resistance factor applied after the core pool is full; values applied here will cause that fraction\nof submissions to create new threads when no idle thread is available. A value of {@code 0.0f} implies that\nthreads beyond the core size should be created as aggressively as threads within it; a value of {@code 1.0f}\nimplies that threads beyond the core size should never be created.
io.quarkus.runtime.CommandLineRuntimeConfig.args=The arguments passed to the command line.\n<p>\nWe don't make it a list as the args are separated by a space, not a comma.
io.quarkus.runtime.ThreadPoolConfig.shutdownTimeout=The shutdown timeout. If all pending work has not been completed by this time\nthen additional threads will be spawned to attempt to finish any pending tasks, and the shutdown process will\ncontinue
io.quarkus.runtime.logging.SyslogConfig.level=The log level specifying, which message levels will be logged by syslog logger
io.quarkus.runtime.logging.LogConfig.minLevel=The default minimum log level\n\n@deprecated this functionality was never implemented, it may be deleted or implemented in a future release.
io.quarkus.runtime.logging.LogConfig.syslogHandlers=Syslog handlers.\n<p>\nThe named syslog handlers configured here can be linked on one or more categories.
io.quarkus.runtime.logging.CleanupFilterConfig.targetLevel=The new log level for the filtered message, defaults to DEBUG
io.quarkus.runtime.logging.LogConfig.syslog=Syslog logging.\n<p>\nLogging to a syslog is also supported but not enabled by default.
io.quarkus.runtime.LiveReloadConfig.url=URL used to use to connect to the remote dev-mode application
io.quarkus.runtime.logging.ConsoleConfig.color=If the console logging should be in color. If undefined quarkus takes\nbest guess based on operating system and environment.\nNote that this value will be ignored if an extension is present that takes\ncontrol of console formatting (e.g. an XML or JSON-format extension).
io.quarkus.runtime.LocalesBuildTimeConfig.locales=The set of supported locales that can be consumed by the extensions.\n<p>\nThe locales must be specified in the IETF BCP 47 format e.g. en-US or fr-FR.\n<p>\nFor instance, the Hibernate Validator extension makes use of it.
io.quarkus.runtime.logging.LogBuildTimeConfig.metricsEnabled=Whether or not logging metrics are published in case a metrics extension is present.
io.quarkus.runtime.LiveReloadConfig.watchedResources=The names of additional resource files to watch for changes, triggering a reload on change. Directories are <em>not</em>\nsupported.
io.quarkus.runtime.ThreadPoolConfig.coreThreads=The core thread pool size. This number of threads will always be kept alive.
io.quarkus.runtime.logging.SyslogConfig.truncate=Set to {@code true} if the message should be truncated
io.quarkus.runtime.logging.SyslogConfig.blockOnReconnect=Enables or disables blocking when attempting to reconnect a\n{@link org.jboss.logmanager.handlers.SyslogHandler.Protocol\#TCP\nTCP} or {@link org.jboss.logmanager.handlers.SyslogHandler.Protocol\#SSL_TCP SSL TCP} protocol
io.quarkus.runtime.logging.CleanupFilterConfig.ifStartsWith=The message starts to match
io.quarkus.runtime.TopLevelRootConfig.profile=Profile that will be active when Quarkus launches\n\nDefault value is 'prod'
io.quarkus.runtime.logging.LogConfig.categories=Logging categories.\n<p>\nLogging is done on a per-category basis. Each category can be independently configured.\nA configuration which applies to a category will also apply to all sub-categories of that category,\nunless there is a more specific matching sub-category configuration.
io.quarkus.runtime.logging.SyslogConfig.endpoint=The IP address and port of the syslog server
io.quarkus.runtime.ThreadPoolConfig.maxThreads=The maximum number of threads. If this is not specified then\nit will be automatically sized to the greater of 8 * the number of available processors and 200.\nFor example if there are 4 processors the max threads will be 200.\nIf there are 48 processors it will be 384.
io.quarkus.runtime.logging.CategoryConfig.handlers=The names of the handlers to link to this category.
io.quarkus.runtime.logging.SyslogConfig.facility=Sets the facility used when calculating the priority of the message as defined by RFC-5424 and RFC-3164
io.quarkus.runtime.logging.LogConfig.consoleHandlers=Console handlers.\n<p>\nThe named console handlers configured here can be linked on one or more categories.
io.quarkus.runtime.logging.FileConfig.RotationConfig.maxBackupIndex=The maximum number of backups to keep.
io.quarkus.runtime.logging.LogConfig.filters=Log cleanup filters - internal use.
io.quarkus.runtime.logging.ConsoleConfig.format=The log format. Note that this value will be ignored if an extension is present that takes\ncontrol of console formatting (e.g. an XML or JSON-format extension).
io.quarkus.runtime.logging.SyslogConfig.format=The log message format
io.quarkus.runtime.logging.AsyncConfig.queueLength=The queue length to use before flushing writing
io.quarkus.runtime.ThreadPoolConfig.prefill=Prefill core thread pool.\nThe core thread pool will be initialised with the core number of threads at startup
io.quarkus.runtime.LiveReloadConfig.password=Password used to use to connect to the remote dev-mode application
io.quarkus.runtime.ApplicationConfig.name=The name of the application.\nIf not set, defaults to the name of the project (except for tests where it is not set at all).
io.quarkus.runtime.logging.ConsoleConfig.darken=Specify how much the colors should be darkened.\nNote that this value will be ignored if an extension is present that takes\ncontrol of console formatting (e.g. an XML or JSON-format extension).
io.quarkus.runtime.logging.FileConfig.format=The log format
io.quarkus.runtime.ThreadPoolConfig.shutdownInterrupt=The amount of time to wait for thread pool shutdown before tasks should be interrupted. If this value is\ngreater than or equal to the value for {@link \#shutdownTimeout}, then tasks will not be interrupted before\nthe shutdown timeout occurs.
io.quarkus.runtime.BannerRuntimeConfig.enabled=Whether or not the banner will be displayed
io.quarkus.runtime.ThreadPoolConfig.queueSize=The queue size. For most applications this should be unbounded
io.quarkus.runtime.ThreadPoolConfig.keepAliveTime=The amount of time a thread will stay alive with no work.
io.quarkus.runtime.logging.FileConfig.path=The name of the file in which logs will be written.
io.quarkus.runtime.logging.LogConfig.console=Console logging.\n<p>\nConsole logging is enabled by default.
io.quarkus.runtime.ApplicationConfig.version=The version of the application.\nIf not set, defaults to the version of the project (except for tests where it is not set at all).
io.quarkus.runtime.logging.FileConfig.RotationConfig.rotateOnBoot=Indicates whether to rotate log files on server initialization.\n<p>\nYou need to either set a {@code max-file-size} or configure a {@code file-suffix} for it to work.
